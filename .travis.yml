language: android
dist : trusty
jdk:
  - oraclejdk8
env:
  global:
    - ANDROID_ABI=x86_64
    - ANDROID_API_LEVEL=28
    - ANDROID_TAG=google_apis
    - ADB_INSTALL_TIMEOUT=10
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
android:
  components:
    - tools                 # add this line if you want to use the latest build tools
    - platform-tools
    - tools
    - build-tools-28.0.3
    - platforms-android-28
    - platforms-android-$ANDROID_API_LEVEL
    - extra-android-m2repository
    - extra-google-google_play_services
    - extra-google-m2repository
  licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    - '.*intel.+'
before_install:
  - mkdir "$ANDROID_HOME/licenses" || true
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
#- openssl aes-256-cbc -K $encrypted_a40c948cb9f8_key -iv $encrypted_a40c948cb9f8_iv
install:
  # Update sdk tools to latest version and install/update components
  #  - echo y | sdkmanager "platform-tools"
  #  - echo y | sdkmanager "tools"
  #  - echo y | sdkmanager "build-tools;28.0.3"
  #  - echo y | sdkmanager "platforms;android-28"
  - echo y | sdkmanager --channel=4 "emulator"
  #  - echo y | sdkmanager "extras;android;m2repository"
  - echo y | sdkmanager "system-images;android-$ANDROID_API_LEVEL;$ANDROID_TAG;$ANDROID_ABI"
  - echo no | avdmanager create avd --force -n emq_test -k "system-images;android-$ANDROID_API_LEVEL;$ANDROID_TAG;$ANDROID_ABI" -c 100M
  - emulator -verbose -avd emq_test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
  #  - emulator -avd avd001 -no-audio -no-window -no-accel -gpu swiftshader -no-snapshot -no-boot-anim &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &
before_script:
  - android list target
  - android list avd
  - adb devices
jobs:
  include:
      name: Instrumentation-Test
      script: "./gradlew cAT"
before_cache:
  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
cache:
  directories:
    - "$HOME/.gradle/caches/"
    - "$HOME/.gradle/wrapper/"
    - "$HOME/android-sdk-dl"
    - "$HOME/android-sdk"

addons:
  artifacts:
    debug: true